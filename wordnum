public class WordNumber {
    private static final String[] NUMBER_NAMES = {
            "", "thousand", "million", "billion", "trillion", "quadrillion"
    };

    private static final String[] DIGIT_NAMES = {
            "", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"
    };

    private static final String[] TEEN_NAMES = {
            "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen",
            "sixteen", "seventeen", "eighteen", "nineteen"
    };

    private static final String[] TENS_NAMES = {
            "", "", "twenty", "thirty", "forty", "fifty",
            "sixty", "seventy", "eighty", "ninety"
    };

    private static String numberToWords(String number) {
        if (number.equals("0")) {
            return "zero";
        }

        StringBuilder words = new StringBuilder();
        int numLength = number.length();
        int groupCount = (numLength - 1) / 3 + 1;
        int start = numLength % 3;
        if (start == 0) {
            start = 3;
        }

        for (int i = start; i <= numLength; i += 3) {
            int end = i;
            int begin = Math.max(0, end - 3);
            String group = number.substring(begin, end);
            int groupValue = Integer.parseInt(group);
            String groupWords = convertGroup(groupValue);
            if (groupWords.length() > 0) {
                words.append(groupWords);
                words.append(" ");
                if (groupCount > 1) {
                    words.append(NUMBER_NAMES[groupCount]);
                    words.append(" ");
                }
            }
            groupCount--;
        }

        return words.toString().trim();
    }

    private static String convertGroup(int number) {
        StringBuilder groupWords = new StringBuilder();

        int hundreds = number / 100;
        if (hundreds > 0) {
            groupWords.append(DIGIT_NAMES[hundreds]);
            groupWords.append(" hundred ");
        }

        int remainder = number % 100;
        if (remainder >= 10 && remainder <= 19) {
            groupWords.append(TEEN_NAMES[remainder - 10]);
        } else {
            int tens = remainder / 10;
            if (tens > 0) {
                groupWords.append(TENS_NAMES[tens]);
                groupWords.append(" ");
            }

            int ones = remainder % 10;
            if (ones > 0) {
                groupWords.append(DIGIT_NAMES[ones]);
            }
        }

        return groupWords.toString().trim();
    }

    public static void main(String[] args) {
        String[] testCases = {
                "532,487",
                "532",
                "532,487,609",
                "4,110,612,742,123,127"
        };

        for (String testCase : testCases) {
            String words = numberToWords(testCase);
            System.out.println("Input: " + testCase);
            System.out.println("Output: " + words);
            System.out.println();
        }
    }
}
